<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sensor Data</title>
  <style>
    /* Add your styles here */
    table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
    }
    table, th, td {
      border: 1px solid black;
    }
    th, td {
      padding: 8px;
      text-align: center;
    }
  </style>
</head>
<body>
  <h1>Sensor Data</h1>
  <table id="sensor-data-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Temperature</th>
        <th>Humidity</th>
        <th>Recorded At</th>
      </tr>
    </thead>
    <tbody>
      <!-- Sensor data will be populated here -->
    </tbody>
  </table>

  <script>
    // Fetch the sensor data from the /get-sensor-data endpoint
    function fetchSensorData() {
      fetch('/get-sensor-data')
        .then(response => response.json())
        .then(data => {
          const tableBody = document.querySelector('#sensor-data-table tbody');
          tableBody.innerHTML = ''; // Clear existing rows
          
          // Loop through the data and create a row for each sensor data entry
          data.forEach(sensor => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${sensor.id}</td>
              <td>${sensor.temperature}</td>
              <td>${sensor.humidity}</td>
              <td>${new Date(sensor.recorded_at).toLocaleString()}</td>
            `;
            tableBody.appendChild(row);
          });
        })
        .catch(error => {
          console.error('Error fetching sensor data:', error);
        });
    }

    // Call fetchSensorData function to populate the table when the page loads
    window.onload = function() {
      fetchSensorData();
    };

    // Optionally, you can call fetchSensorData periodically to update the table every 5 seconds
    setInterval(fetchSensorData, 5000);
  </script>
</body>
</html>